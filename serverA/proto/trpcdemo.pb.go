// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.25.3
// source: trpcdemo.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mydata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string                      `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	NodeState map[int32]*Mydata_NodeState `protobuf:"bytes,2,rep,name=node_state,json=nodeState,proto3" json:"node_state,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WorkState string                      `protobuf:"bytes,3,opt,name=work_state,json=workState,proto3" json:"work_state,omitempty"`
	Zone      string                      `protobuf:"bytes,4,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *Mydata) Reset() {
	*x = Mydata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpcdemo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mydata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mydata) ProtoMessage() {}

func (x *Mydata) ProtoReflect() protoreflect.Message {
	mi := &file_trpcdemo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mydata.ProtoReflect.Descriptor instead.
func (*Mydata) Descriptor() ([]byte, []int) {
	return file_trpcdemo_proto_rawDescGZIP(), []int{0}
}

func (x *Mydata) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Mydata) GetNodeState() map[int32]*Mydata_NodeState {
	if x != nil {
		return x.NodeState
	}
	return nil
}

func (x *Mydata) GetWorkState() string {
	if x != nil {
		return x.WorkState
	}
	return ""
}

func (x *Mydata) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type ProcessDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedisKey string `protobuf:"bytes,1,opt,name=redis_key,json=redisKey,proto3" json:"redis_key,omitempty"`
}

func (x *ProcessDataRequest) Reset() {
	*x = ProcessDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpcdemo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDataRequest) ProtoMessage() {}

func (x *ProcessDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trpcdemo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDataRequest.ProtoReflect.Descriptor instead.
func (*ProcessDataRequest) Descriptor() ([]byte, []int) {
	return file_trpcdemo_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessDataRequest) GetRedisKey() string {
	if x != nil {
		return x.RedisKey
	}
	return ""
}

type Mydata_NodeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId               int32                                        `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	HasContainer         bool                                         `protobuf:"varint,2,opt,name=has_container,json=hasContainer,proto3" json:"has_container,omitempty"`
	ContainerCode        string                                       `protobuf:"bytes,3,opt,name=container_code,json=containerCode,proto3" json:"container_code,omitempty"`
	LastReadTime         int64                                        `protobuf:"varint,4,opt,name=last_read_time,json=lastReadTime,proto3" json:"last_read_time,omitempty"`
	LastReportTime       int64                                        `protobuf:"varint,5,opt,name=last_report_time,json=lastReportTime,proto3" json:"last_report_time,omitempty"`
	LastLeaveSuccessTime int64                                        `protobuf:"varint,6,opt,name=last_leave_success_time,json=lastLeaveSuccessTime,proto3" json:"last_leave_success_time,omitempty"`
	LastHasContainerTime int64                                        `protobuf:"varint,7,opt,name=last_has_container_time,json=lastHasContainerTime,proto3" json:"last_has_container_time,omitempty"`
	ContainerAttribute   *Mydata_NodeState_ConveyorContainerAttribute `protobuf:"bytes,8,opt,name=container_attribute,json=containerAttribute,proto3" json:"container_attribute,omitempty"`
	ContainerTask        string                                       `protobuf:"bytes,9,opt,name=container_task,json=containerTask,proto3" json:"container_task,omitempty"`
	GroupCode            string                                       `protobuf:"bytes,10,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`
}

func (x *Mydata_NodeState) Reset() {
	*x = Mydata_NodeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpcdemo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mydata_NodeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mydata_NodeState) ProtoMessage() {}

func (x *Mydata_NodeState) ProtoReflect() protoreflect.Message {
	mi := &file_trpcdemo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mydata_NodeState.ProtoReflect.Descriptor instead.
func (*Mydata_NodeState) Descriptor() ([]byte, []int) {
	return file_trpcdemo_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Mydata_NodeState) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Mydata_NodeState) GetHasContainer() bool {
	if x != nil {
		return x.HasContainer
	}
	return false
}

func (x *Mydata_NodeState) GetContainerCode() string {
	if x != nil {
		return x.ContainerCode
	}
	return ""
}

func (x *Mydata_NodeState) GetLastReadTime() int64 {
	if x != nil {
		return x.LastReadTime
	}
	return 0
}

func (x *Mydata_NodeState) GetLastReportTime() int64 {
	if x != nil {
		return x.LastReportTime
	}
	return 0
}

func (x *Mydata_NodeState) GetLastLeaveSuccessTime() int64 {
	if x != nil {
		return x.LastLeaveSuccessTime
	}
	return 0
}

func (x *Mydata_NodeState) GetLastHasContainerTime() int64 {
	if x != nil {
		return x.LastHasContainerTime
	}
	return 0
}

func (x *Mydata_NodeState) GetContainerAttribute() *Mydata_NodeState_ConveyorContainerAttribute {
	if x != nil {
		return x.ContainerAttribute
	}
	return nil
}

func (x *Mydata_NodeState) GetContainerTask() string {
	if x != nil {
		return x.ContainerTask
	}
	return ""
}

func (x *Mydata_NodeState) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

type Mydata_NodeState_ConveyorContainerAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height              int64  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Length              int64  `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Width               int64  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Weight              int64  `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Material            int64  `protobuf:"varint,5,opt,name=material,proto3" json:"material,omitempty"`
	Orientation         string `protobuf:"bytes,6,opt,name=orientation,proto3" json:"orientation,omitempty"`
	SkuInfo             string `protobuf:"bytes,7,opt,name=sku_info,json=skuInfo,proto3" json:"sku_info,omitempty"`
	AbnormalReason      string `protobuf:"bytes,8,opt,name=abnormal_reason,json=abnormalReason,proto3" json:"abnormal_reason,omitempty"`
	GroupAbnormalReason string `protobuf:"bytes,9,opt,name=group_abnormal_reason,json=groupAbnormalReason,proto3" json:"group_abnormal_reason,omitempty"`
	Qrcode              string `protobuf:"bytes,10,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
	AbnormalCode        int64  `protobuf:"varint,11,opt,name=abnormal_code,json=abnormalCode,proto3" json:"abnormal_code,omitempty"`
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) Reset() {
	*x = Mydata_NodeState_ConveyorContainerAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trpcdemo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mydata_NodeState_ConveyorContainerAttribute) ProtoMessage() {}

func (x *Mydata_NodeState_ConveyorContainerAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_trpcdemo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mydata_NodeState_ConveyorContainerAttribute.ProtoReflect.Descriptor instead.
func (*Mydata_NodeState_ConveyorContainerAttribute) Descriptor() ([]byte, []int) {
	return file_trpcdemo_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetMaterial() int64 {
	if x != nil {
		return x.Material
	}
	return 0
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetOrientation() string {
	if x != nil {
		return x.Orientation
	}
	return ""
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetSkuInfo() string {
	if x != nil {
		return x.SkuInfo
	}
	return ""
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetAbnormalReason() string {
	if x != nil {
		return x.AbnormalReason
	}
	return ""
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetGroupAbnormalReason() string {
	if x != nil {
		return x.GroupAbnormalReason
	}
	return ""
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetQrcode() string {
	if x != nil {
		return x.Qrcode
	}
	return ""
}

func (x *Mydata_NodeState_ConveyorContainerAttribute) GetAbnormalCode() int64 {
	if x != nil {
		return x.AbnormalCode
	}
	return 0
}

var File_trpcdemo_proto protoreflect.FileDescriptor

var file_trpcdemo_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x72, 0x70, 0x63, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0xdc, 0x08, 0x0a, 0x06, 0x6d, 0x79, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x72, 0x70, 0x63,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x6d, 0x79, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x1a, 0x64, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x6d,
	0x79, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xd8, 0x06, 0x0a, 0x09, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x6c, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x61, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x6d, 0x79, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x79, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0xed, 0x02, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x79,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x62,
	0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x62, 0x6e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x64, 0x69, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x32, 0x64, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x6d, 0x79, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_trpcdemo_proto_rawDescOnce sync.Once
	file_trpcdemo_proto_rawDescData = file_trpcdemo_proto_rawDesc
)

func file_trpcdemo_proto_rawDescGZIP() []byte {
	file_trpcdemo_proto_rawDescOnce.Do(func() {
		file_trpcdemo_proto_rawDescData = protoimpl.X.CompressGZIP(file_trpcdemo_proto_rawDescData)
	})
	return file_trpcdemo_proto_rawDescData
}

var file_trpcdemo_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_trpcdemo_proto_goTypes = []interface{}{
	(*Mydata)(nil),             // 0: trpc.test.helloworld.mydata
	(*ProcessDataRequest)(nil), // 1: trpc.test.helloworld.ProcessDataRequest
	nil,                        // 2: trpc.test.helloworld.mydata.NodeStateEntry
	(*Mydata_NodeState)(nil),   // 3: trpc.test.helloworld.mydata.NodeState
	(*Mydata_NodeState_ConveyorContainerAttribute)(nil), // 4: trpc.test.helloworld.mydata.NodeState.ConveyorContainerAttribute
}
var file_trpcdemo_proto_depIdxs = []int32{
	2, // 0: trpc.test.helloworld.mydata.node_state:type_name -> trpc.test.helloworld.mydata.NodeStateEntry
	3, // 1: trpc.test.helloworld.mydata.NodeStateEntry.value:type_name -> trpc.test.helloworld.mydata.NodeState
	4, // 2: trpc.test.helloworld.mydata.NodeState.container_attribute:type_name -> trpc.test.helloworld.mydata.NodeState.ConveyorContainerAttribute
	1, // 3: trpc.test.helloworld.DataService.ProcessData:input_type -> trpc.test.helloworld.ProcessDataRequest
	0, // 4: trpc.test.helloworld.DataService.ProcessData:output_type -> trpc.test.helloworld.mydata
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_trpcdemo_proto_init() }
func file_trpcdemo_proto_init() {
	if File_trpcdemo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trpcdemo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mydata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpcdemo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpcdemo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mydata_NodeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trpcdemo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mydata_NodeState_ConveyorContainerAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trpcdemo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trpcdemo_proto_goTypes,
		DependencyIndexes: file_trpcdemo_proto_depIdxs,
		MessageInfos:      file_trpcdemo_proto_msgTypes,
	}.Build()
	File_trpcdemo_proto = out.File
	file_trpcdemo_proto_rawDesc = nil
	file_trpcdemo_proto_goTypes = nil
	file_trpcdemo_proto_depIdxs = nil
}
